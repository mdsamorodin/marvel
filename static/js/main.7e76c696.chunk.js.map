{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/errorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/errorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/pages/404.js","components/pages/SingleComicPage.js","components/app/App.js","index.js"],"names":["AppHeader","_jsxs","className","children","_jsx","Link","to","NavLink","exact","activeStyle","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","_transformCharacter","char","id","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","getAllCharacters","offset","res","results","map","getCharacter","_ref2","_callee2","_context2","_transformComics","_comics$textObjects$","title","pages","pageCount","language","textObjects","price","prices","getAllComics","_ref3","_callee3","_args3","_context3","getComics","_ref4","_callee4","_context4","_x2","View","indexOf","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","chars","setChars","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charsEnded","setCharsEnded","onCharsLoaded","newChars","ended","_toConsumableArray","updateChars","initial","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","imgStyle","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","_Fragment","resourceURI","split","min","CharInfo","charId","skeleton","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","errorInfo","console","log","this","setState","Component","MainPage","selectedChar","setSelectedChar","decoration","AppBanner","avengers","avengersLogo","ComicsList","setComics","comicsEnded","setComicsEnded","onComicsLoaded","newComics","updateComics","ComicsPage","Page404","comic","SingleComic","comicId","useParams","setComic","updateComic","onComicLoaded","App","Router","Switch","Route","SingleComicPage","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e76c696.chunk.js","sourcesContent":["import { Link, NavLink } from 'react-router-dom'\n\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink exact activeStyle={{ 'color': '#9f0013' }} to=\"/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink activeStyle={{ 'color': '#9f0013' }} to=\"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ margin: '0 auto', background: 'none', display: 'block' }} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n                <g transform=\"rotate(0)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n                <g transform=\"rotate(45)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n                <g transform=\"rotate(90)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n                <g transform=\"rotate(135)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n                <g transform=\"rotate(180)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n                <g transform=\"rotate(225)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n                <g transform=\"rotate(270)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n                <g transform=\"rotate(315)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\", objectFit: 'contain', margin: \"0 auto\" }} src={img} alt=\"Error\" />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const { loading, request, error, clearError } = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n    const _apiKey = 'apikey=bbce2348c626267f563208230cd8f734'\r\n    const _baseOffsetChar = 210\r\n    const _baseOffsetComicbook = 210\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? (char.description.length < 180 ? char.description : char.description.slice(0, 180) + '...') : 'Information about this character is not found',\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const getAllCharacters = async (offset = _baseOffsetChar) => {\r\n        const res = await request(\r\n            `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n        );\r\n        return res.data.results.map(_transformCharacter);\r\n    };\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    };\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || \"There is no description\",\r\n            pages: comics.pageCount ? `${comics.pageCount} p.` : \"No information about the number of pages\",\r\n            language: comics.textObjects[0]?.language || \"en-us\",\r\n            price: comics.prices[0].price ? `${comics.prices[0].price}$` : \"not available\",\r\n            thumbnail: `${comics.thumbnail.path}.${comics.thumbnail.extension}`,\r\n        }\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffsetComicbook) => {\r\n        const res = await request(\r\n            `${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`\r\n        );\r\n        return res.data.results.map(_transformComics);\r\n    };\r\n\r\n    const getComics = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    };\r\n\r\n    return { loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComics }\r\n}\r\n\r\nexport default useMarvelService\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, { method, body, headers });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return { loading, request, error, clearError }\r\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\n\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n    const [char, setChar] = useState(null)\n    const { loading, error, getCharacter, clearError } = useMarvelService()\n\n    useEffect(() => {\n        updateChar()\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char)\n    }\n\n    const updateChar = () => {\n        clearError()\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\n        getCharacter(id).then(onCharLoaded)\n    }\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br />\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\" onClick={updateChar}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n            </div>\n        </div>\n    )\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki } = char\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={thumbnail.indexOf('image_not_available') > -1 ? { objectFit: 'contain' } : null} />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n    const [chars, setChars] = useState([]),\n        [newItemLoading, setNewItemLoading] = useState(false),\n        [offset, setOffset] = useState(210),\n        [charsEnded, setCharsEnded] = useState(false)\n\n    const { loading, error, getAllCharacters } = useMarvelService()\n\n    const onCharsLoaded = (newChars) => {\n        let ended = false\n        if (newChars.length < 9) {\n            ended = true\n        }\n        setChars(chars => [...chars, ...newChars])\n        setNewItemLoading(false)\n        setOffset(offset => offset + 9)\n        setCharsEnded(ended)\n    }\n\n    const updateChars = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\n        getAllCharacters(offset).then(onCharsLoaded)\n    }\n\n\n    useEffect(() => {\n        updateChars(offset, true)\n    }, [])\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = { 'objectFit': 'cover' };\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { 'objectFit': 'unset' };\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(chars)\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                onClick={() => updateChars(offset)}\n                style={{ display: charsEnded ? 'none' : 'block' }}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Skeleton from '../skeleton/Skeleton'\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n    const [char, setChar] = useState(null)\n    const { loading, error, getCharacter, clearError } = useMarvelService()\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId])\n\n    const onCharLoaded = (char) => {\n        setChar(char)\n    }\n\n\n    const updateChar = () => {\n        const { charId } = props\n        if (!charId) {\n            return;\n        }\n        clearError()\n        getCharacter(charId).then(onCharLoaded)\n    }\n\n    const skeleton = error || loading || char ? null : <Skeleton />\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki, comics } = char\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={char.thumbnail.indexOf('image_not_available') > -1 ? { objectFit: 'contain' } : null} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {\n                    comics.length > 0 ?\n                        comics.map((item, i) => {\n                            return (\n                                <li key={i} className=\"char__comics-item\">\n                                    <Link to={`/comics/${item.resourceURI.split('/')[item.resourceURI.split('/').length - 1]}`}>\n                                        {item.name}\n                                    </Link>\n                                </li>\n                            )\n                        }).slice(0, Math.min(10, comics.length)) : 'There are no comics with this character'\n                }\n            </ul>\n        </>\n    )\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from '../errorMessage/errorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react';\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from '../errorBoundary/errorBoundary';\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n    const [selectedChar, setSelectedChar] = useState(null)\r\n\r\n    const onCharSelected = (id) => {\r\n        setSelectedChar(id)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar />\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected} />\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar} />\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\n\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n    const [comics, setComics] = useState([]),\n        [newItemLoading, setNewItemLoading] = useState(false),\n        [offset, setOffset] = useState(210),\n        [comicsEnded, setComicsEnded] = useState(false)\n\n    const { loading, error, getAllComics } = useMarvelService()\n\n    const onComicsLoaded = (newComics) => {\n        let ended = false\n        if (newComics.length < 8) {\n            ended = true\n        }\n        setComics(comics => [...comics, ...newComics])\n        setNewItemLoading(false)\n        setOffset(offset => offset + 8)\n        setComicsEnded(ended)\n    }\n\n    const updateComics = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\n        getAllComics(offset).then(onComicsLoaded)\n    }\n\n    useEffect(() => {\n        updateComics(offset, true)\n    }, [])\n\n    function renderItems(arr) {\n        const items = arr.map((item) => {\n            return (\n                <li\n                    className=\"comics__item\"\n                    key={item.id}\n                >\n                    <Link to={`/comics/${item.id}`} >\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comics)\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                onClick={() => updateComics(offset)}\n                style={{ display: comicsEnded ? 'none' : 'block' }}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\"\r\nimport ComicsList from '../comicsList/ComicsList';\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import ErrorMessage from \"../errorMessage/errorMessage\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <div>\r\n            <ErrorMessage />\r\n            <p style={{ 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px' }}>Page doesn't exist</p>\r\n            <Link style={{ 'display': 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px', 'marginTop': '30px' }} to=\"/\">Back to main page</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404;","import { useParams, Link } from 'react-router-dom'\nimport { useState, useEffect } from 'react';\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './singleComicPage.scss'\n\nconst SingleComic = () => {\n    const { comicId } = useParams()\n    const [comic, setComic] = useState(null)\n    const { loading, error, getComics, clearError } = useMarvelService()\n\n    useEffect(() => {\n        updateComic()\n    }, [comicId])\n\n    const onComicLoaded = (comic) => {\n        setComic(comic)\n    }\n\n\n    const updateComic = () => {\n        if (!comicId) {\n            return;\n        }\n        clearError()\n        getComics(comicId).then(onComicLoaded)\n    }\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !comic) ? <View comic={comic} /> : null;\n\n    return (\n        <>\n            {errorMessage}\n            {spinner}\n            {content}\n        </>\n    )\n\n}\n\nconst View = ({ comic }) => {\n    const { title, description, thumbnail, pages, language, price } = comic\n\n    return (\n        <div className=\"single-comic\">\n            <img src={thumbnail} alt={title} className=\"single-comic__img\" />\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pages}</p>\n                <p className=\"single-comic__descr\">Language: {language}</p>\n                <div className=\"single-comic__price\">{price}</div>\n            </div>\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n        </div>\n    )\n}\n\nexport default SingleComic;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport { MainPage, ComicsPage, Page404, SingleComicPage } from '../pages'\n\nconst App = () => {\n\n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader />\n                <main>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <MainPage />\n                        </Route>\n                        <Route exact path=\"/comics\">\n                            <ComicsPage />\n                        </Route>\n                        <Route exact path=\"/comics/:comicId\">\n                            <SingleComicPage />\n                        </Route>\n                        <Route path=\"*\">\n                            <Page404 />\n                        </Route>\n                    </Switch>\n\n                </main>\n            </div>\n        </Router>\n\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}